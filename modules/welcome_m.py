import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler

logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    return_code = ConversationHandler.END
    keyboard = [
        [
            InlineKeyboardButton("üé≤ –§–∞–∫—Ç", callback_data="random_fact"),
            InlineKeyboardButton("ü§ñ GPT-—á–∞—Ç", callback_data="gpt")
        ],
        [InlineKeyboardButton("üí¨ –û–±—â–µ–Ω–∏–µ —Å –ª–∏—á–Ω–æ—Å—Ç—è–º–∏", callback_data="talk")],
        [InlineKeyboardButton("üß† –ò–≥—Ä–∞—Ç—å –≤ quiz", callback_data="quiz")],
        [InlineKeyboardButton("üñº –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", callback_data="picture")],
        [InlineKeyboardButton("üéß –ì–æ–ª–æ—Å–æ–≤–æ–π ChatGPT", callback_data="voice")]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    welcome_text = (
        "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –±–æ—Ç–∞! üôã‚Äç‚ôÇÔ∏è</b>\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥ –≤—Ä—É—á–Ω—É—é.\n"
        "–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —ç—Ç–æ –º–µ–Ω—é —Å–Ω–æ–≤–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <code>/start</code>.\n\n"
        "üìå <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã:</b>\n"
        "üé≤ <b>–§–∞–∫—Ç</b> (<code>/random_fact</code>) ‚Äî –ø–æ–ª—É—á–∏—Ç–µ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "ü§ñ <b>GPT-—á–∞—Ç</b> (<code>/gpt</code>) ‚Äî –ø–æ–æ–±—â–∞–π—Ç–µ—Å—å —Å ChatGPT\n"
        "üí¨ <b>–û–±—â–µ–Ω–∏–µ —Å –ª–∏—á–Ω–æ—Å—Ç—è–º–∏</b> (<code>/talk</code>) ‚Äî –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏\n"
        "üß† <b>–ò–≥—Ä–∞—Ç—å –≤ quiz</b> (<code>/quiz</code>) ‚Äî —Å—ã–≥—Ä–∞–π—Ç–µ –≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—É—é –∏–≥—Ä—É\n"
        "üñº <b>–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</b> (<code>/picture</code>) ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ –±–æ—Ç –µ–≥–æ –æ–ø–∏—à–µ—Ç\n"
        "üéß <b>–ì–æ–ª–æ—Å–æ–≤–æ–π ChatGPT</b> (<code>/voice</code>) ‚Äî –≥–æ–≤–æ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å–æ–º, –ø–æ–ª—É—á–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –≥–æ–ª–æ—Å–æ–º\n"
    )

    if update.message:
        await update.message.reply_text(welcome_text, parse_mode='HTML', reply_markup=reply_markup)

    elif update.callback_query:
        query = update.callback_query
        await query.answer()

        can_edit = query.message and query.message.text is not None

        if can_edit:
            await query.edit_message_text(welcome_text, parse_mode='HTML', reply_markup=reply_markup)
        else:
            await query.message.delete()
            await query.message.chat.send_message(welcome_text, parse_mode='HTML', reply_markup=reply_markup)
    return return_code